--- samd51_vanilla/hal/src/hal_timer.c	2017-09-20 22:33:52.000000000 -0700
+++ samd51/hal/src/hal_timer.c	2017-09-19 13:07:30.000000000 -0700
@@ -236,7 +236,10 @@
  */
 static void timer_process_counted(struct _timer_device *device)
 {
+	#pragma GCC diagnostic push
+	#pragma GCC diagnostic ignored "-Wcast-align"
 	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
+	#pragma GCC diagnostic pop
 	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
 	uint32_t                 time  = ++timer->time;

--- a/hal/src/hal_flash.c
+++ b/hal/src/hal_flash.c
@@ -304,7 +304,10 @@ static int32_t flash_is_address_aligned(struct flash_descriptor *flash, const ui
  */
 static void flash_ready(struct _flash_device *device)
 {
+       #pragma GCC diagnostic push
+       #pragma GCC diagnostic ignored "-Wcast-align"
        struct flash_descriptor *const descr = CONTAINER_OF(device, struct flash_descriptor, dev);
+       #pragma GCC diagnostic pop
        if (descr->callbacks.cb_ready) {
                descr->callbacks.cb_ready(descr);
        }
@@ -317,7 +320,10 @@ static void flash_ready(struct _flash_device *device)
  */
 static void flash_error(struct _flash_device *device)
 {
+       #pragma GCC diagnostic push
+       #pragma GCC diagnostic ignored "-Wcast-align"
        struct flash_descriptor *const descr = CONTAINER_OF(device, struct flash_descriptor, dev);
+       #pragma GCC diagnostic pop
        if (descr->callbacks.cb_error) {
                descr->callbacks.cb_error(descr);
        }
--- a/hpl/nvmctrl/hpl_nvmctrl.c
+++ b/hpl/nvmctrl/hpl_nvmctrl.c
@@ -386,7 +386,10 @@ static void _flash_erase_block(void *const hw, const uint32_t dst_addr)
  */
 static void _flash_program(void *const hw, const uint32_t dst_addr, const uint8_t *buffer, const uint16_t size)
 {
+       #pragma GCC diagnostic push
+       #pragma GCC diagnostic ignored "-Wcast-align"
        uint32_t *ptr_read    = (uint32_t *)buffer;
+       #pragma GCC diagnostic pop
        uint32_t  nvm_address = dst_addr / 4;
        uint16_t  i;
