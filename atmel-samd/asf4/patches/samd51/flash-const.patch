--- a/hal/include/hal_flash.h
+++ b/hal/include/hal_flash.h
@@ -132,7 +132,7 @@ int32_t flash_write(struct flash_descriptor *flash, uint32_t dst_addr, uint8_t *
  *  \param[in]  length    Number of bytes to append
  *  \return Append status.
  */
-int32_t flash_append(struct flash_descriptor *flash, uint32_t dst_addr, uint8_t *buffer, uint32_t length);
+int32_t flash_append(struct flash_descriptor *flash, uint32_t dst_addr, const uint8_t *buffer, uint32_t length);

 /** \brief Reads a number of bytes to a page in the internal Flash
  *
--- a/hal/include/hpl_flash.h
+++ b/hal/include/hpl_flash.h
@@ -125,7 +125,7 @@ void _flash_read(struct _flash_device *const device, const uint32_t src_addr, ui
  *                           write is stored
  * \param[in]  length        Number of bytes to write
  */
-void _flash_write(struct _flash_device *const device, const uint32_t dst_addr, uint8_t *buffer, uint32_t length);
+void _flash_write(struct _flash_device *const device, const uint32_t dst_addr, const uint8_t *buffer, uint32_t length);

 /**
  * \brief Appends a number of bytes in the internal Flash.
@@ -135,7 +135,7 @@ void _flash_write(struct _flash_device *const device, const uint32_t dst_addr, u
  * \param[in]  buffer        Pointer to buffer with data to write to flash
  * \param[in]  length        Number of bytes to write
  */
-void _flash_append(struct _flash_device *const device, const uint32_t dst_addr, uint8_t *buffer, uint32_t length);
+void _flash_append(struct _flash_device *const device, const uint32_t dst_addr, const uint8_t *buffer, uint32_t length);

 /** \brief Execute lock in the internal flash
  *  \param[in] device         The pointer to FLASH device instance

--- a/hal/src/hal_flash.c
+++ b/hal/src/hal_flash.c
@@ -135,7 +135,7 @@ int32_t flash_write(struct flash_descriptor *flash, uint32_t dst_addr, uint8_t *
 /**
  * \brief Appends a number of bytes to a page in the internal Flash
  */
-int32_t flash_append(struct flash_descriptor *flash, uint32_t dst_addr, uint8_t *buffer, uint32_t length)
+int32_t flash_append(struct flash_descriptor *flash, uint32_t dst_addr, const uint8_t *buffer, uint32_t length)
 {
        ASSERT(flash && buffer && length);

--- a/hpl/nvmctrl/hpl_nvmctrl.c
+++ b/hpl/nvmctrl/hpl_nvmctrl.c
@@ -167,7 +167,7 @@ void _flash_read(struct _flash_device *const device, const uint32_t src_addr, ui
 /**
  * \brief Writes a number of bytes to a page in the internal Flash.
  */
-void _flash_write(struct _flash_device *const device, const uint32_t dst_addr, uint8_t *buffer, uint32_t length)
+void _flash_write(struct _flash_device *const device, const uint32_t dst_addr, const uint8_t *buffer, uint32_t length)
 {
        uint8_t  tmp_buffer[NVMCTRL_BLOCK_PAGES][NVMCTRL_PAGE_SIZE];
        uint32_t block_start_addr, block_end_addr;
@@ -212,7 +212,7 @@ void _flash_write(struct _flash_device *const device, const uint32_t dst_addr, u
 /**
  * \brief Appends a number of bytes in the internal Flash.
  */
-void _flash_append(struct _flash_device *const device, const uint32_t dst_addr, uint8_t *buffer, uint32_t length)
+void _flash_append(struct _flash_device *const device, const uint32_t dst_addr, const uint8_t *buffer, uint32_t length)
 {
        uint32_t page_start_addr = dst_addr & ~(NVMCTRL_PAGE_SIZE - 1);
        uint32_t size;
